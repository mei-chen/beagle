# Generated by Django 2.2 on 2021-03-24 21:34

import collections
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import jsonfield.fields
import model_utils.fields
import picklefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('pending', models.BooleanField(default=False)),
                ('failed', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, default=None, null=True, verbose_name='Error message')),
                ('trash', models.BooleanField(default=False, verbose_name='Deleted')),
                ('name', models.CharField(max_length=200)),
                ('docs', jsonfield.fields.JSONField(null=True)),
                ('invalid_docs', jsonfield.fields.JSONField(null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'batches',
            },
        ),
        migrations.CreateModel(
            name='DelayedNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('notification', picklefield.fields.PickledObjectField(editable=False, verbose_name='Notification')),
                ('user_fields', jsonfield.fields.JSONField(default={'fields': []}, verbose_name='Delayed fields')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('transient', models.BooleanField(default=True, verbose_name='Transient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('pending', models.BooleanField(default=False)),
                ('failed', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, default=None, null=True, verbose_name='Error message')),
                ('trash', models.BooleanField(default=False, verbose_name='Deleted')),
                ('original_name', models.CharField(max_length=300, verbose_name='Original Name')),
                ('title', models.CharField(max_length=300, verbose_name='Title')),
                ('uuid', models.CharField(max_length=100, unique=True, verbose_name='UUID')),
                ('agreement_type', models.CharField(choices=[('-', 'Agreement'), ('NDA', 'NDA')], default='-', max_length=300, null=True, verbose_name='Agreement Type')),
                ('agreement_type_confidence', models.FloatField(default=0.0, null=True, verbose_name='Agreement Type Confidence')),
                ('dirty', models.BooleanField(default=False, verbose_name='Are annotations out of date?')),
                ('keywords_state', jsonfield.fields.JSONField(default=None, null=True)),
                ('learners_state', jsonfield.fields.JSONField(default=None, null=True)),
                ('doclevel_analysis', jsonfield.fields.JSONField(load_kwargs={'object_pairs_hook': collections.OrderedDict}, null=True)),
                ('cached_analysis', jsonfield.fields.JSONField(load_kwargs={'object_pairs_hook': collections.OrderedDict}, null=True)),
                ('docx_file', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='Docx Path')),
                ('docx_s3', models.CharField(blank=True, help_text='Format: bucket:filename', max_length=255, null=True, verbose_name='S3 docx address')),
                ('pdf_s3', models.CharField(blank=True, help_text='Format: bucket:filename', max_length=255, null=True, verbose_name='S3 pdf address')),
                ('doc_s3', models.CharField(blank=True, help_text='Format: bucket:filename', max_length=255, null=True, verbose_name='S3 doc address')),
                ('sents', jsonfield.fields.JSONField(null=True)),
                ('prepared', models.NullBooleanField(default=False, verbose_name='Prepared')),
                ('upload_source', models.CharField(blank=True, max_length=100, null=True, verbose_name='Upload Source')),
                ('initsample', models.BooleanField(default=False, verbose_name='Is it an initial sample document?')),
                ('processing_begin_timestamp', models.DateTimeField(default=None, null=True, verbose_name='Processing begin Timestamp')),
                ('processing_end_timestamp', models.DateTimeField(default=None, null=True, verbose_name='Processing end Timestamp')),
                ('time_zone', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='Time Zone')),
                ('batch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Batch')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('lightweight', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='UserLastViewDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Document')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SentenceLock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('lifetime', models.IntegerField(default=60)),
                ('owner', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('uuid', models.CharField(db_index=True, max_length=100, verbose_name='UUID')),
                ('text', models.TextField(verbose_name='Sentence text')),
                ('formatting', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Formatted contents')),
                ('style', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Style attributes')),
                ('deleted', models.BooleanField(default=False, verbose_name='Is it deleted?')),
                ('accepted', models.BooleanField(default=False, verbose_name='Is it accepted?')),
                ('rejected', models.BooleanField(default=False, verbose_name='Is it rejected?')),
                ('comments', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='List of comments')),
                ('extrefs', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='List of external references')),
                ('likes', jsonfield.fields.JSONField(blank=True, null=True, verbose_name='Likes')),
                ('newlines', models.IntegerField(default=0, verbose_name='Trailing line-breaks')),
                ('annotations', jsonfield.fields.JSONField(blank=True, default=None, null=True, verbose_name='Annotations')),
                ('doc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Document')),
                ('lock', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.SentenceLock')),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('prev_revision', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_revision', to='core.Sentence')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExternalInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('pending', models.BooleanField(default=False)),
                ('failed', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True, default=None, null=True, verbose_name='Error message')),
                ('email', models.EmailField(max_length=254)),
                ('email_sent_date', models.DateTimeField(null=True)),
                ('document', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Document')),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Sentence')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='CollaboratorList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('collaborator_suggestions', jsonfield.fields.JSONField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='collaborator_aggregate', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CollaborationInvite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Document')),
                ('invitee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_received', to=settings.AUTH_USER_MODEL)),
                ('inviter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations_sent', to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Sentence')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
