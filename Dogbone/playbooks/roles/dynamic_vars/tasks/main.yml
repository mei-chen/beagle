---


- name: construct DATABASE_URL
  set_fact:
      DATABASE_URL: postgres://{{ hostvars[groups['rds'][0]]['username'] }}:{{ db_password | default(hostvars[groups['rds'][0]]['password']) }}@{{ groups['rds'][0] }}:{{ hostvars[groups['rds'][0]]['ansible_ssh_port'] }}/{{ hostvars[groups['rds'][0]]['db_name'] }}

- name: Construct REDIS_URL
  set_fact:
    REDIS_URL: redis://{{ groups['elasticache'][0] }}:{{ hostvars[groups['elasticache'][0]]['ansible_ssh_port'] }}/0

- name: Construct BROKER_URL
  set_fact:
    BROKER_URL: redis://{{ groups['elasticache'][0] }}:{{ hostvars[groups['elasticache'][0]]['ansible_ssh_port'] }}/1

- name: Set all envs
  set_fact:
    app_env: "{{ app_env | combine({ \"DATABASE_URL\": DATABASE_URL, \"REDIS_URL\": REDIS_URL, \"BROKER_URL\": BROKER_URL, \"SESSION_SECRET\": SESSION_SECRET, \"SLACK_WEBHOOK\": SLACK_WEBHOOK, \"SLACK_USERNAME\": SLACK_USERNAME, \"PROFILE_PICTURE_BUCKET\": PROFILE_PICTURE_BUCKET, \"PREDICTION_MODELS_BUCKET\": PREDICTION_MODELS_BUCKET, \"UPLOADED_DOCUMENTS_BUCKET\": UPLOADED_DOCUMENTS_BUCKET, \"AWS_S3_HOST\": AWS_S3_HOST, \"DOMAIN\": APPLICATION_FQDN }) }}"
    db_name: "{{ hostvars[groups['rds'][0]]['db_name'] }}"
    db_user: "{{ hostvars[groups['rds'][0]]['username'] }}"
    db_password: "db_password | {{ hostvars[groups['rds'][0]]['password'] }}"
    db_host: "{{ groups['rds'][0] }}"
    db_port: "{{ hostvars[groups['rds'][0]]['ansible_ssh_port'] }}"
    PROFILE_PICTURE_BUCKET: "{{ PROFILE_PICTURE_BUCKET }}"
    PREDICTION_MODELS_BUCKET: "{{ PREDICTION_MODELS_BUCKET }}"
    UPLOADED_DOCUMENTS_BUCKET: "{{ UPLOADED_DOCUMENTS_BUCKET }}"
    CLIENT_NAME: "{{ client_name }}"

- debug: msg="{{ app_env }}"
- debug: msg="{{ groups }}"
