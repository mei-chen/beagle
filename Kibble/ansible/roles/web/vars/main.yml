---


# Application settings.
project_path: "/srv/{{ application_name }}"

# Venv
virtualenv_path: "/srv/venv"
virtualenv_python_version: python3.6

#Socket
npm_socket_path: "{{ project_path}}/realtime/node"
npm_frontend_path: "{{ project_path}}/portal/static/js"
npm_user: "{{ server_user }}"

# Logs
application_log_dir: "/srv/logs"
application_log_file: "{{ application_log_dir }}/gunicorn_supervisor.log"
application_log_npm_file: "{{ application_log_dir }}/npm_supervisor.log"

# Gunicorn settings.
gunicorn_user: "{{ server_user }}"
gunicorn_group: "{{ server_user }}"

# Gunicorn settings. For the number of workers, a good rule to follow is
# 2 x number of CPUs + 1
gunicorn_num_workers: 3

# Setting this to 1 will restart the Gunicorn process each time
# you make a request, basically reloading the code. Very handy
# when developing. Set to 0 for unlimited requests (default).
gunicorn_max_requests: 0
gunicorn_timeout_seconds: 300

supervisor_django: "{{ application_name }}_django"
supervisor_npm: "{{ application_name }}_npm"

# Nginx settings.
nginx_access_log_file: "{{ application_log_dir }}/nginx_access.log"
nginx_error_log_file: "{{ application_log_dir }}/nginx_error.log"
nginx_static_dir: "{{ project_path }}/static/"
nginx_media_dir: "{{ project_path }}/media/"

# Django variables.
requirements_file: "{{ project_path }}/requirements.txt"
local_requirements_file: "{{ project_path }}/local_req.txt"

django_environment:
  DJANGO_SECRET_KEY: "{{ django_secret_key }}"
  MEDIA_ROOT: "{{ nginx_media_dir }}"
  STATIC_ROOT: "{{ nginx_static_dir }}"
  DATABASE_NAME: "{{ db_name }}"
  DATABASE_USER: "{{ db_user }}"
  DATABASE_PASSWORD: "{{ db_password }}"

run_django_collectstatic: yes
run_django_db_migrations: yes
setup_git_repo: yes
